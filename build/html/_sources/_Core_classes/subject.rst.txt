subject
=======================================

.. autoclass:: labplatform.core.Subject.Subject

.. autoclass:: labplatform.core.Subject.SubjectList


How to use the subject class
=======================================

Subjects are generated by creating oan instance of the "Subject" class. This instance inherits default values for all
parameters except 'name' and 'group', which must always be specified manually.After generating a subject it should be
saved to an .h5 file. The combination of name and subject must be
unique within the file. The files should be stored to the default path which can be accessed using the variable "SUBJECT_ROOT".
When you are writing a subject to a .h5 file that does't exist the file will be created.

Example::

    from Core.subject import Subject
    from Config import get_config
    import os

    subject = Subject(name = "Ole", group = "Novice_Programmer") # create a new instance of the 'Subject' class
    h5_path = os.path.join(get_config("SUBJECT_ROOT"), "Lab_Members.h5") # specify path to h5 file
    subject.add_subject_to_h5file(h5_path) # write the subject into the .h5 file. If the file does not exist it is created.


You can access stored subject information by creating an instance of the 'SubjectList' class and specifing the path
to the respective .h5 file. After creating a handle you can load the file. The subject information is stored in the
variable 'subjects'. The first entry in that list should be the subjects specified in the beginning of the example::

    from Core.subject import SubjectList

    lab_members = SubjectList(file_path = h5_path) # create SubjectList instance
    file_handle = lab_members.find_file() # create file handle
    lab_members.read_from_h5file(file_handle) # load subjectlist
    subject = lab_members.subjects[0] # select one subject

To start a new experiment, a subject needs to be specified.
The subject can be given as an input when creating an instance of the experiment class::

    from Experiments.FooExperiment import FooExperiment

    experiment = FooExperiment(subject=subject)
